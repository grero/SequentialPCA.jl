using Test
using SequentialPCA
using LinearAlgebra
using StatsBase
using JLD2

JLD2.@load "seqpca_testdata.jd2" Y t

spca = fit(SeqPCA, permutedims(Y, [2,1]);ncomps=2)

@test spca.idx[1] == 137
@test spca.idx[2] == 203
@test spca.proj[:,1] ≈ [-0.3152906912389484, -0.31131868366233795, -0.309019458711838, -0.34060757374173767, -0.3019797615889533, -0.3170798089014857, -0.319770799883921, -0.3274811897538346, -0.29929831080033475, -0.3135631385010019, -0.025129024262699914, 0.015246179173417947, -0.005117452863433221, -0.005721923846878229, 0.0056188914511517175, 0.037428500988064564, 0.003812278196834579, 0.0034607225782717693, -0.02362980563265375, 0.009784205980658689]
@test spca.proj[:,2] ≈ [-0.010226207500876827, -0.0013232857889340064, 0.0005240031800935293, -0.0073548159125420565, 0.005764873757480721, -0.004775347314930739, 0.00651727289456399, 0.006678792168954199, 0.019440168828233222, -0.0010872956264168432, 0.32984957601076975, 0.3145867111442853, 0.3296302041938054, 0.3151805275003123, 0.31892804856031337, 0.3009224441273542, 0.320693505783347, 0.31152481659364695, 0.3121484899449276, 0.3065266271089163]

V = orthogonalize(spca.proj)
@test V'*V ≈ I
